/***************************
 * Drive 5000
 * Rev. A3
 ***************************/

#pragma once

#include <xs1.h>
#include <platform.h>

/* ADC */
#define ADC_DATA_A  IF2_PORT_1BIT_6  // port 1F on DC5K, which is IF2_PORT_1BIT_6 on C22
#define ADC_DATA_B  IF2_PORT_1BIT_2   // port 1E on DC5K, which is IF2_PORT_1BIT_2 on C22
#define ADC_SCLK    IF2_PORT_1BIT_16    // port 1H on DC5K, which is IF2_PORT_1BIT_16 on C22
#define ADC_READY   IF2_PORT_1BIT_4     // port 1G on DC5K, which is IF2_PORT_1BIT_4 on C22
#define ADC_MUX IF2_PORT_4BIT_20_58_10_8 // 4-bit port used to control multiplexor on ADC.
                                         // port 4C on DC5K, which is  on C22
#define ADC_CLK_SRC IF2_TILE_CLOCK_1   
#define SOMANET_IF2_ADC	AD7265        

#define SOMANET_IF2_ADC_PORTS {     \
    { null, null, null, null },     \
    { {ADC_DATA_A , ADC_DATA_B},    \
     ADC_CLK_SRC,                   \
     ADC_SCLK,                      \
     ADC_READY,                     \
     ADC_MUX},                      \
     {0, 1, -1, 50}                    \
}

/* FET DRIVER A4935 control ports */
#define SOMANET_IF2_FET_DRIVER_PORTS {  \
    null,                               \
    null,                               \
    null,                               \
    null                                \
}

/* ENCODER 1 (HALL) SENSOR PORT */
#define SOMANET_IF2_ENCODER_1_PORT IF2_PORT_4BIT_38_44_30_34

/* ENCODER 2 (QEI) SENSOR PORT */
#define SOMANET_IF2_ENCODER_2_PORT IF2_PORT_4BIT_64_66_76_80

/* INPUT MODE SELECTION PORT */
#define ENCODER_PORTS_INPUT_MODE_SELECTION IF2_PORT_4BIT_68_70_72_74

#define SOMANET_IF2_ENCODER_PORTS_INPUT_MODE_SELECTION { \
    ENCODER_PORTS_INPUT_MODE_SELECTION,                  \
    0                                                    \
}

/* PWM PORTS*/
#define DEADTIME_NS           1500 /*nano-seconds*/

#define PWM_PORT_A_HIGH_SIDE IF2_PORT_1BIT_62
#define PWM_PORT_B_HIGH_SIDE IF2_PORT_1BIT_26
#define PWM_PORT_C_HIGH_SIDE IF2_PORT_1BIT_54

#define PWM_PORT_A_LOW_SIDE IF2_PORT_1BIT_56
#define PWM_PORT_B_LOW_SIDE IF2_PORT_1BIT_52
#define PWM_PORT_C_LOW_SIDE IF2_PORT_1BIT_24


#define PWM_CLOCK_SRC IF2_TILE_CLOCK_0
#define PWM_DUMMY_PORT_TRIGGER INTERNAL_PORT_16BIT_NOT_CONNECTED_0

#define SOMANET_IF2_PWM_PORTS {                                         \
    {PWM_PORT_A_HIGH_SIDE, PWM_PORT_B_HIGH_SIDE, PWM_PORT_C_HIGH_SIDE}, \
    {PWM_PORT_A_LOW_SIDE, PWM_PORT_B_LOW_SIDE, PWM_PORT_C_LOW_SIDE},    \
    null,                                               \
    null,                                                \
    PWM_CLOCK_SRC,                                                      \
    PWM_DUMMY_PORT_TRIGGER                                              \
}

#define SOMANET_IF2_PWM_PORTS_GENERAL {  \
    PWM_PORT_A_HIGH_SIDE,                \
    PWM_PORT_A_LOW_SIDE,                 \
    PWM_PORT_B_HIGH_SIDE,                \
    PWM_PORT_B_LOW_SIDE,                 \
    PWM_PORT_C_HIGH_SIDE,                \
    PWM_PORT_C_LOW_SIDE,                 \
    null,                				 \
    null,                 				 \
    null,                                \
    null,                                \
    null,                                \
    null,                                \
    null,                                \
    null,                 				 \
    null,                				 \
    null,                 				 \    
    PWM_CLOCK_SRC,                       \
    PWM_DUMMY_PORT_TRIGGER               \
}

/* LEDs, Watchdog */
#define WATCHDOG_TICK_PORT null
#define WATCHDOG_EN_PORT IF2_PORT_4BIT_36_46_48_50 
#define WATCHDOG_DIAG_EN_PORT null
#define CPLD_SHARED_PORT null
#define CPLD_FAULT_MONITOR null

#define SOMANET_IF2_WATCHDOG_PORTS {    \
    WATCHDOG_EN_PORT,                   \
    WATCHDOG_DIAG_EN_PORT,              \
    WATCHDOG_TICK_PORT,                 \
    CPLD_SHARED_PORT,                   \
    CPLD_FAULT_MONITOR                  \
}

/* GPIO_PORTS */
#define SOMANET_IF2_GPIO_D0 IF2_PORT_1BIT_28  // equivalent to port 1A in C22, which is EXT_D.0 in DC5K
#define SOMANET_IF2_GPIO_D1 IF2_PORT_1BIT_32  // equivalent to port 1B in C22, which is EXT_D.1 in DC5K
#define SOMANET_IF2_GPIO_D2 IF2_PORT_1BIT_78  // equivalent to port 1I in C22, which is EXT_D.2 in DC5K
#define SOMANET_IF2_GPIO_D3 IF2_PORT_1BIT_40  // equivalent to port 1C in C22, which is EXT_D.3 in DC5K


/* AMS Absolute Position Sensor Ports */
/*  MOSI = D3
    SCLK = D1
    MISO = D2
    

    out buffered port:8 mosi; equivalent to SOMANET_IF2_GPIO_D3  equivalent to EXT_D.3  equivalen to pin 6 (green)
    out buffered port:8 sclk; equivalent to SOMANET_IF2_GPIO_D1  equivalent to EXT_D.1  equivalen to pin 3 (red)
    in buffered port:8 miso;  equivalent to SOMANET_IF2_GPIO_D2  equivalent to EXT_D.2  equivalen to pin 5 (yellow)
    
    out port slave_select;    equivalent to SOMANET_IF2_GPIO_D0  equivalent to EXT_D.0  equivalen to pin 2 (brown)
    
    GND                                                                                 equivalen to pin 4 (orange)
    VCC                                                                                 equivalen to pin 7 (blue)


	typedef struct
	{
		{
		    clock blk1;
		    clock blk2;
		    out buffered port:8 mosi; = SOMANET_IF2_GPIO_D3 = IF2_PORT_1BIT_40 = XS1_PORT_1C = EXT D.3 = pin 6
		    out buffered port:8 sclk; = SOMANET_IF2_GPIO_D1 = IF2_PORT_1BIT_32 = XS1_PORT_1B = EXT D.1 = pin 3
		    in buffered port:8 miso;  = SOMANET_IF2_GPIO_D2 = IF2_PORT_1BIT_78 = XS1_PORT_1I = EXT D.2 = pin 5
		}
		out port slave_select;        = SOMANET_IF2_GPIO_D0 = IF2_PORT_1BIT_28 = XS1_PORT_1A = EXT D.0 = pin 2
	} AMSPorts;
    */

//FixMe: D2 and D1 are flipped because the clock trace is too short, will be fixed in hardware
#define SOMANET_IF2_AMS_PORTS {     \
    {                               \
        IF2_TILE_CLOCK_2,           \
        IF2_TILE_CLOCK_3,           \
        SOMANET_IF2_GPIO_D3,        \
        SOMANET_IF2_GPIO_D2,        \
        SOMANET_IF2_GPIO_D1         \
    },                              \
    SOMANET_IF2_GPIO_D0             \
}
